# -*- coding: utf-8 -*-
"""Notebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CITNLQXuN_xb143otSndNOdP7uCEKrD2

# **Proyek Pertama Machine Learning Terapan**

**Studi Kasus  :&nbsp;&nbsp;** Klasifikasi Rasio Makronutrien Harian  
**Isi Dataset &nbsp;&nbsp;:** &nbsp;&nbsp;`1000 Baris`  
**Algoritma &nbsp;&nbsp;&nbsp; :**  
- 🚂Logistic Regression
- 🌲Random Forest

## **🧠 Domain Proyek**

> ---
### **📚 Latar Belakang**

Setiap individu memiliki pola konsumsi makanan yang berbeda. Rasio makronutrien harian yang tidak seimbang dapat memengaruhi energi, berat badan, hingga risiko penyakit metabolik [1], [2]. Oleh karena itu, klasifikasi pola makan berdasarkan rasio kalori dari karbohidrat, protein, dan lemak dapat menjadi alat bantu penting dalam:

- Memberikan insight terhadap gaya hidup makan.
- Mendorong kesadaran gizi yang lebih personal.
- Membantu otomatisasi rekomendasi nutrisi dengan cara yang dapat diskalakan.

Menurut World Health Organization (2023), sekitar **60% penyakit tidak menular** seperti diabetes tipe 2, hipertensi, dan obesitas berkaitan langsung dengan **pola makan tidak seimbang** [4]. Banyak individu tanpa disadari mengonsumsi makanan tinggi karbohidrat atau lemak secara berlebihan tanpa kompensasi asupan protein dan serat yang cukup [3], [5].

Di sisi lain, laporan dari USDA mencatat bahwa lebih dari **75% orang dewasa di dunia barat melebihi batas asupan lemak jenuh**, sementara kurang dari **30% memenuhi kebutuhan protein harian secara optimal** [5].

> Oleh karena itu, pendekatan berbasis data untuk mengklasifikasikan dominansi makronutrien harian secara otomatis menjadi penting sebagai langkah awal menuju **intervensi nutrisi personal yang lebih efektif dan terukur** [2], [3].

> ---

### **❓ Why & How?**

**Why**
- 📈 **Kebutuhan akan rekomendasi nutrisi personal** meningkat seiring tren gaya hidup sehat.
- 🧩 Banyak pengguna tidak memahami distribusi gizi dalam pola makannya.
- ⚖️ Dominansi makronutrien yang tidak seimbang dapat memicu masalah kesehatan jangka panjang.

**How**
- Dengan menghitung proporsi kalori harian dari makronutrien utama, kita dapat **melabeli tiap hari** sebagai `Karbo-Dominan`, `Protein-Dominan`, atau `Lemak-Dominan`.
- Label ini akan diprediksi berdasarkan fitur numerik harian pengguna dengan dua model supervised learning:
  - 🌲 Random Forest  
  - 🚂 Logistic Regression

> ---

### 🔍 Riset & Referensi Relevan

Berikut adalah referensi utama yang mendasari pendekatan klasifikasi dominansi makronutrien harian dalam proyek ini:

1. Harvard T.H. Chan School of Public Health. (n.d.). *Dietary Macronutrient Distribution and Cardiometabolic Risk*. Retrieved from https://www.hsph.harvard.edu

2. World Health Organization – Regional Office for Europe. (2015). *Understanding nutrient profiling: an implementation tool for public health policies*. Retrieved from https://www.who.int

3. U.S. Department of Agriculture & U.S. Department of Health and Human Services. (2020). *Dietary Guidelines for Americans, 2020–2025*. 9th Edition. Retrieved from https://www.dietaryguidelines.gov

4. World Health Organization. (2023). *Noncommunicable Diseases Factsheet*. Retrieved from https://www.who.int/news-room/fact-sheets/detail/noncommunicable-diseases

5. U.S. Department of Agriculture (USDA) & Centers for Disease Control and Prevention (CDC). (2022). *What We Eat in America – NHANES 2017–2020*. Retrieved from https://www.cdc.gov/nchs/nhanes/index.htm
> ---

| No. | Referensi                                                                                                             | Keterangan                                                                                  |
|-----|------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|
| [1] | Harvard T.H. Chan School of Public Health. (n.d.). *Dietary Macronutrient Distribution and Cardiometabolic Risk*. Retrieved from https://www.hsph.harvard.edu            | Studi yang meneliti hubungan antara proporsi makronutrien dan risiko penyakit metabolik.   |
| [2] | World Health Organization – Regional Office for Europe. (2015). *Understanding nutrient profiling: an implementation tool for public health policies*. Retrieved from https://www.who.int                          | Dokumen framework penilaian gizi berbasis data dan klasifikasi nutrien.                    |
| [3] | U.S. Department of Agriculture & U.S. Department of Health and Human Services. (2020). *Dietary Guidelines for Americans, 2020–2025*. 9th Edition. Retrieved from https://www.dietaryguidelines.gov                                  | Panduan resmi makronutrien harian dan rekomendasi gizi berdasarkan usia & aktivitas.       |
| [4] | World Health Organization. (2023). *Noncommunicable Diseases Factsheet*. Retrieved from https://www.who.int/news-room/fact-sheets/detail/noncommunicable-diseases                                         | Fakta bahwa lebih dari 60% penyakit NCD disebabkan oleh pola makan tidak seimbang.         |
| [5] | U.S. Department of Agriculture (USDA) & Centers for Disease Control and Prevention (CDC). (2022). *What We Eat in America – NHANES 2017–2020*. Retrieved from https://www.cdc.gov/nchs/nhanes/index.htm | Survei nasional menunjukkan 75% orang dewasa konsumsi lemak jenuh berlebih, dan <30% cukup protein. |

---

## **💼 Business Understanding**

> ---

### **🎯 Problem Statements**

- Bagaimana mengklasifikasikan hari makan pengguna menjadi Karbo-dominan, Protein-dominan, atau Lemak-dominan berdasarkan total asupan harian?
- Apakah model machine learning mampu secara akurat memprediksi dominansi makronutrien dari data gizi numerik pengguna?

> ---

### **🥅 Goals**

- Membangun sistem klasifikasi makronutrien harian pengguna berdasarkan data makanan & nutrisi.
- Membandingkan performa antara model **Random Forest** dan **Logistic Regression** dalam tugas klasifikasi ini.
- Menghasilkan metrik evaluasi seperti **Akurasi**, **Precision**, dan **F1-Score** untuk masing-masing model.

> ---

### **🧩 Solution Statements**

**🚂 Solusi 1 – Logistic Regression**
- **Deskripsi**: Model linier probabilistik yang memetakan fitur (karbo, protein, lemak, kalori) ke peluang tiap kelas dominansi.
- **Metrik Evaluasi**:
  - Akurasi Klasifikasi
  - Macro F1-Score
  - Confusion Matrix

**🌲 Solusi 2 – Random Forest**
- **Deskripsi**: Ensemble decision tree yang kuat terhadap noise dan dapat menangkap non-linearitas dalam data konsumsi makanan.
- **Metrik Evaluasi**:
  - Akurasi
  - F1-Score per kelas (karbo/protein/lemak)
  - Confusion Matrix

> ---

## **Data Understanding**

### **Exploratory Data Analysis**

#### **Import Library**
"""

# Manipulasi Data
import pandas as pd
import numpy as np

# Visualisasi
import matplotlib.pyplot as plt
import seaborn as sns

# Pengaturan Tampilan
pd.set_option('display.max_columns', None)
sns.set(style="whitegrid")

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

"""#### **Load & Info Data**"""

import gdown

# URL GDrive untuk gdown
url = 'https://drive.google.com/uc?id=1-XFdsZ1WZaqHXg2uy5cojj2iOaMCUXw3'
output = 'nutrition_dataset.csv'
gdown.download(url, output, quiet=False)

# Membaca data
df = pd.read_csv(output)

# Tampilkan 5 data teratas
df.head()

# Informasi struktur data
df.info()

# Cek missing values
print("\nMissing Values:")
print(df.isnull().sum())

# Ringkasan statistik deskriptif
df.describe()

"""📌 **Insights:**
1. Struktur Data

 - 10.000 entri, 14 kolom, tanpa missing values → data bersih & siap olah.

 - Fitur terdiri dari data numerik (kalori & nutrisi) dan kategorikal (nama makanan, kategori, tanggal, dll).

2. Statistik Nutrisi

 - Rata-rata kalori per makanan: 328 kkal

 - Protein, karbohidrat, dan lemak berkisar antara 1–100 gram, menunjukkan variasi yang luas antar makanan.

 - Distribusi nutrien relatif normal, meski ada indikasi outlier pada sodium dan kolesterol.

3. User & Tanggal

 - Perlu agregasi per (User_ID, Date) untuk menghitung total asupan harian & rasio makronutrien.

4. Kesiapan Modeling

 - Dataset ideal untuk supervised classification setelah agregasi & labeling dominansi makronutrien.

#### **Visualisasi**
"""

# Histogram Kalori
plt.figure(figsize=(10, 5))
sns.histplot(df['Calories (kcal)'], kde=True, bins=50, color='orange')
plt.title('Distribusi Kalori per Item Makanan')
plt.xlabel('Kalori (kcal)')
plt.ylabel('Frekuensi')
plt.show()

# Top 10 Makanan Paling Sering Muncul
plt.figure(figsize=(10, 6))
top_foods = df['Food_Item'].value_counts().head(10)
sns.barplot(x=top_foods.values, y=top_foods.index, palette='viridis')
plt.title('Top 10 Makanan yang Paling Sering Dikonsumsi')
plt.xlabel('Jumlah Kemunculan')
plt.ylabel('Makanan')
plt.show()

"""📌 **Insights:**

##### **📊 Distribusi Kategori Makanan**
Dataset terdiri dari tujuh kategori makanan utama yang relatif seimbang jumlahnya:
- Kategori paling sering dikonsumsi: **Dairy (1,460), Fruits (1,453), Beverages (1,445)**
- Kategori paling sedikit: **Grains (1,384), Vegetables (1,408)**  
Distribusi ini mencerminkan keragaman konsumsi makanan yang cukup merata di antara pengguna.

##### **🍽️ Rata-rata Nutrisi Berdasarkan Kategori**
Nilai rata-rata nutrisi utama (per food item) relatif seragam antar kategori:
- **Snacks & Beverages** cenderung memiliki kandungan kalori, karbohidrat, dan protein sedikit lebih tinggi.
- **Vegetables** memiliki kalori dan lemak paling rendah, sesuai karakteristik makanan sehat.

> Ini menunjukkan bahwa meskipun kategori berbeda, kontribusi nutrisi tiap makanan tetap relevan dan dapat digunakan untuk klasifikasi.

##### **🥪 Distribusi Meal Type**
Empat jenis waktu makan menunjukkan jumlah yang hampir seimbang:
- **Breakfast (2,559), Dinner (2,503), Lunch (2,487), Snack (2,451)**  
Artinya, data tidak bias terhadap waktu makan tertentu dan siap digunakan untuk analisis harian.

##### **📈 Statistik Deskriptif Umum**
- Rata-rata konsumsi per item: **328 kkal, 25g protein, 52g karbo, 25g lemak**
- Rentang nilai cukup luas (kalori: 50–600, sodium: 0–1000 mg) — menunjukkan pentingnya normalisasi saat modeling.
- Nilai median ≈ mean, menunjukkan distribusi yang tidak terlalu skewed.

### **Sumber Data**

**Source:** https://www.kaggle.com/datasets/adilshamim8/daily-food-and-nutrition-dataset

### **Uraian Feature Data**

Dataset ini terdiri dari 14 kolom yang merepresentasikan informasi makanan harian dan nilai nutrisinya. Berikut adalah deskripsi masing-masing fitur:

| Fitur | Tipe | Deskripsi |
|-------|------|-----------|
| `Date` | object (datetime) | Tanggal konsumsi makanan (format: YYYY-MM-DD) |
| `User_ID` | int | ID unik pengguna yang mengonsumsi makanan tersebut |
| `Food_Item` | object | Nama makanan yang dikonsumsi (contoh: Apple, Chicken Breast) |
| `Category` | object | Kategori makanan (contoh: Fruits, Meat, Dairy) |
| `Calories (kcal)` | int | Total energi dari makanan, dalam kilokalori |
| `Protein (g)` | float | Jumlah protein dalam gram |
| `Carbohydrates (g)` | float | Jumlah total karbohidrat dalam gram |
| `Fat (g)` | float | Jumlah total lemak dalam gram |
| `Fiber (g)` | float | Kandungan serat dalam gram |
| `Sugars (g)` | float | Kandungan gula dalam gram |
| `Sodium (mg)` | int | Kandungan natrium dalam miligram |
| `Cholesterol (mg)` | int | Kandungan kolesterol dalam miligram |
| `Meal_Type` | object | Jenis waktu makan (contoh: Breakfast, Lunch, Dinner, Snack) |
| `Water_Intake (ml)` | int | Jumlah air yang diminum saat makan, dalam mililiter |

##### 🎯 Tujuan Utama Penggunaan Fitur
- Fokus utama proyek adalah memanfaatkan fitur numerik makronutrien (`Calories`, `Protein`, `Carbohydrates`, `Fat`) untuk menghitung proporsi energi dan melakukan klasifikasi dominansi makronutrien harian.
- Fitur `Date` dan `User_ID` penting untuk agregasi harian per individu.
- Fitur kategorikal seperti `Category` dan `Meal_Type` berguna untuk analisis tambahan dan segmentasi perilaku makan.

## **Data Preparation**

**🎯 Tujuan Tahapan**

Menyiapkan data dalam bentuk harian per pengguna agar dapat digunakan dalam klasifikasi dominansi makronutrien. Ini termasuk agregasi, kalkulasi kontribusi energi tiap makro, dan pembuatan label kelas (`Karbo-Dominan`, `Protein-Dominan`, `Lemak-Dominan`).

### **Teknik yang digunakan**

- **Kalkulasi energi dari makronutrien**  
  Langkah pertama dalam persiapan data adalah menghitung total energi (kalori) dari masing-masing makronutrien berdasarkan nilai gram yang tersedia, dengan konversi standar sebagai berikut:  
  - Karbohidrat = 4 kcal/gram  
  - Protein = 4 kcal/gram  
  - Lemak = 9 kcal/gram  
  Perhitungan ini dilakukan untuk setiap entri makanan pada dataset mentah.

- **Agregasi per hari per user**  
  Setelah energi dihitung, data kemudian diagregasi berdasarkan kombinasi `Date` dan `User_ID`. Nilai energi dari setiap makronutrien serta total kalori dijumlahkan untuk menghasilkan total asupan harian per individu. Langkah ini menyederhanakan data menjadi satu baris per hari per pengguna.

- **Hitung proporsi energi dari masing-masing makro**  
  Proporsi energi masing-masing makro terhadap total kalori harian dihitung menggunakan rumus berikut:  
  - `Perc_Carbs = Energy_Carbs / Total_Calories`  
  - `Perc_Protein = Energy_Protein / Total_Calories`  
  - `Perc_Fat = Energy_Fat / Total_Calories`  
  Proporsi ini memberikan gambaran kontribusi relatif dari masing-masing makronutrien terhadap total energi harian.

- **Label klasifikasi dominansi makro**  
  Kelas target `Dominant_Macro` ditentukan berdasarkan makronutrien dengan proporsi energi tertinggi pada hari tersebut. Label akhir dikategorikan sebagai:  
  - **Karbo-Dominan**  
  - **Protein-Dominan**  
  - **Lemak-Dominan**

- **Pemisahan dan pembagian data: Training dan Testing**  
  Data dibagi menjadi fitur (`X`: energi karbo, protein, lemak) dan label (`y`: Dominant_Macro), kemudian dilakukan pembagian data menggunakan `train_test_split` dengan rasio 80:20 dan stratifikasi untuk menjaga proporsi kelas seimbang.

- **Normalisasi fitur**  
  Sebelum model Logistic Regression dilatih, fitur dinormalisasi menggunakan **StandardScaler** agar memiliki mean 0 dan standar deviasi 1. Hal ini penting karena algoritma ini sensitif terhadap skala fitur.

### **Penjelasan Proses & Alasan Tahapan**

- **Kalkulasi energi** diperlukan untuk mengubah satuan makronutrien menjadi satuan energi yang konsisten dan relevan bagi analisis nutrisi.
- **Agregasi harian** merangkum data mentah ke dalam bentuk yang sesuai dengan tujuan prediksi, yaitu per hari per user.
- **Proporsi energi** digunakan untuk menilai dominansi relatif, bukan absolut, dari makronutrien terhadap total energi harian.
- **Label dominansi** merupakan target klasifikasi yang memungkinkan penerapan supervised learning.
- **Split data** penting agar model dapat dievaluasi secara adil terhadap data yang tidak terlihat saat pelatihan.
- **Normalisasi fitur** meningkatkan stabilitas dan performa model Logistic Regression.

### **Agregasi dan Pembuatan Label**
"""

# Salin DataFrame untuk pemrosesan
df_daily = df.copy()

# Hitung kalori dari masing-masing makro (karbo, protein, lemak)
df_daily['Energy_Carbs'] = df_daily['Carbohydrates (g)'] * 4
df_daily['Energy_Protein'] = df_daily['Protein (g)'] * 4
df_daily['Energy_Fat'] = df_daily['Fat (g)'] * 9

# Agregasi total harian per user
daily_macro = df_daily.groupby(['Date', 'User_ID']).agg({
    'Energy_Carbs': 'sum',
    'Energy_Protein': 'sum',
    'Energy_Fat': 'sum',
    'Calories (kcal)': 'sum',
}).reset_index()

# Hitung rasio proporsi energi dari total kalori
daily_macro['Perc_Carbs'] = daily_macro['Energy_Carbs'] / daily_macro['Calories (kcal)']
daily_macro['Perc_Protein'] = daily_macro['Energy_Protein'] / daily_macro['Calories (kcal)']
daily_macro['Perc_Fat'] = daily_macro['Energy_Fat'] / daily_macro['Calories (kcal)']

# Label: klasifikasi dominansi makro
def dominant_macro(row):
    macros = {
        'Karbo-Dominan': row['Perc_Carbs'],
        'Protein-Dominan': row['Perc_Protein'],
        'Lemak-Dominan': row['Perc_Fat']
    }
    return max(macros, key=macros.get)

daily_macro['Dominant_Macro'] = daily_macro.apply(dominant_macro, axis=1)

# Tampilkan data siap pakai untuk modeling
daily_macro.head()

"""📌 **Insights:**
- Data telah berhasil diringkas per pengguna per hari, mencakup total energi dari karbohidrat, protein, dan lemak.
- Terdapat kolom proporsi kontribusi energi masing-masing makro terhadap total kalori (`Perc_Carbs`, `Perc_Protein`, `Perc_Fat`).
- Kelas target `Dominant_Macro` dibuat berdasarkan makronutrien dengan proporsi energi terbesar.
- Contoh data menunjukkan variasi pola makan harian yang signifikan antar pengguna:
  - User 92 didominasi **lemak** dengan ~60% kontribusi energi dari lemak.
  - User 121, 171, 231, dan 262 menunjukkan **karbohidrat** sebagai makro dominan — dengan rasio karbohidrat mencapai lebih dari 100% pada beberapa entri, kemungkinan akibat perhitungan energi yang tidak seimbang (asupan kalori terlalu rendah dibanding makronutrien).
- Nilai `Perc_*` > 1 pada beberapa entri mengindikasikan potensi inkonsistensi antara total kalori dan kontribusi makronutrien yang perlu diperiksa (misalnya kesalahan pencatatan kalori terlalu kecil).

**🧪 Split Data: Training dan Testing**
"""

# Menamai ulang ke df_model untuk keperluan modeling
df_model = daily_macro

# Fitur dan label
X = df_model[['Energy_Carbs', 'Energy_Protein', 'Energy_Fat']]
y = df_model['Dominant_Macro']

# Split ke data latih dan data uji
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=y)

"""#### **Normalisasi fitur**"""

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

"""## **Modeling**

### **🚂 Logistic Regression**

#### **Membuat model Logistic Regression**
"""

logreg = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=1000)
logreg.fit(X_train_scaled, y_train)

"""#### **Prediksi**"""

y_pred_logreg = logreg.predict(X_test_scaled)

# Evaluasi hasil
print("🚂 Logistic Regression Evaluation Results:")
print("Akurasi:", accuracy_score(y_test, y_pred_logreg))
print("\nClassification Report:\n", classification_report(y_test, y_pred_logreg))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred_logreg))

"""📌 **Insights:**
- **Akurasi sangat tinggi**: Model mencapai **akurasi 99.95%**, menunjukkan performa hampir sempurna pada data uji.
- **Kinerja per kelas sangat baik**:
  - **Karbo-Dominan** dan **Lemak-Dominan** diklasifikasi dengan **precision, recall, dan f1-score sempurna (1.00)**.
  - **Protein-Dominan** sedikit menurun pada recall (0.99), namun tetap memiliki f1-score 1.00 — menunjukkan ketepatan dan konsistensi klasifikasi yang sangat baik.
- **Confusion Matrix**:
  - Hampir tidak ada kesalahan klasifikasi — hanya **1 instance** dari kelas *Protein-Dominan* yang salah diklasifikasi.
  
> **Kesimpulan**: Logistic Regression sangat efektif dalam mengenali pola dominansi makronutrien dari data energi harian pengguna. Ini bisa dijadikan baseline kuat untuk perbandingan dengan model lain seperti Random Forest.

### **🌲 Random Forest**

#### **Membuat model Random Forest**
"""

rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

"""#### **Prediksi**"""

y_pred_rf = rf.predict(X_test)

# Evaluasi hasil
print("🌳 Random Forest Evaluation Results:")
print("\nClassification Report:")
print(classification_report(y_test, y_pred_rf))

print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred_rf))

"""📌 **Insights:**
- **Akurasi** model mencapai **98%**, menunjukkan performa yang sangat baik dalam mengklasifikasikan dominansi makronutrien.
- Semua kelas (Karbo-, Lemak-, dan Protein-Dominan) memiliki **precision, recall, dan f1-score ≥ 0.96**, menandakan model seimbang dan minim bias terhadap kelas tertentu.
- **Confusion Matrix** menunjukkan hanya sedikit kesalahan prediksi:
  - Karbo-Dominan: 12 salah prediksi (10 ke Lemak, 2 ke Protein)
  - Lemak-Dominan: 14 salah prediksi (11 ke Karbo, 3 ke Protein)
  - Protein-Dominan: 5 salah prediksi (2 ke Karbo, 3 ke Lemak)

> **Kesimpulan**: Random Forest memberikan performa yang sangat stabil dan dapat diandalkan dalam klasifikasi makronutrien dominan harian pengguna.

### **Best Model**

##### **✅ Pemilihan Model Terbaik**

###### **🔍 Alasan Memilih Logistic Regression sebagai Model Terbaik:**

- **Akurasi Tertinggi:** **`🚂 Logistic Regression`** memberikan akurasi hampir sempurna (99.9%) dibanding Random Forest (98.0%).
- **Stabil di Semua Kelas**: Tidak ada kesalahan prediksi signifikan; hanya satu kasus minor di kelas Protein-Dominan.
- **Kesederhanaan dan Interpretabilitas**: Logistic Regression mudah diinterpretasikan dan diimplementasikan, terutama saat fitur terbatas dan tidak kompleks.

###### **🎯 Kesimpulan:**
Model **🚂 Logistic Regression** dipilih sebagai **solusi terbaik** karena memberikan performa paling optimal, minim kesalahan, serta cukup andal untuk kebutuhan klasifikasi makronutrien dominan pengguna secara harian.

## **Evaluation**

Hasil evaluasi dua model klasifikasi yang digunakan:

| Model                | Akurasi | Macro Precision | Macro Recall | Macro F1-Score | Catatan                                                                 |
|---------------------|---------|------------------|---------------|----------------|-------------------------------------------------------------------------|
| Logistic Regression | 99.95%  | 1.00             | 1.00          | 1.00           | Performa sempurna hampir tanpa kesalahan. Hanya 1 salah klasifikasi.   |
| Random Forest       | 98.00%  | 0.98             | 0.98          | 0.98           | Performa sangat tinggi, namun masih terjadi misklasifikasi minor antar kelas. |

##### 📏 Metrik Evaluasi yang Digunakan

Untuk mengevaluasi kinerja model klasifikasi pada proyek ini, digunakan beberapa metrik utama berikut:

- **Accuracy (Akurasi)**  
  Formula:  

  $$
  \text{Accuracy} = \frac{\text{Jumlah prediksi benar}}{\text{Total prediksi}}
  $$

  Metrik ini mengukur seberapa banyak prediksi yang benar dibanding total keseluruhan prediksi. Cocok digunakan ketika distribusi kelas cukup seimbang, seperti pada kasus ini.

- **Precision, Recall, dan F1-Score**  
  Untuk setiap kelas:

  - **Precision**: Proporsi prediksi positif yang benar  
    $$
    \text{Precision} = \frac{\text{TP}}{\text{TP + FP}}
    $$

  - **Recall**: Proporsi kasus positif yang berhasil diprediksi benar  
    $$
    \text{Recall} = \frac{\text{TP}}{\text{TP + FN}}
    $$

  - **F1-Score**: Harmonic mean dari precision dan recall  
    $$
    \text{F1} = 2 \times \frac{\text{Precision} \times \text{Recall}}{\text{Precision + Recall}}
    $$

  Metrik ini memberikan gambaran lebih detail tentang performa model pada masing-masing kelas, terutama saat penting meminimalkan kesalahan pada kategori tertentu (misalnya dominansi makronutrien).

- **Confusion Matrix**  
  Matriks ini menunjukkan secara eksplisit jumlah prediksi benar dan salah dari tiap kelas. Berguna untuk memahami pola kesalahan model.

---

##### 📊 Hasil Evaluasi Model

| Model                | Akurasi | Macro Precision | Macro Recall | Macro F1-Score | Catatan                                                                 |
|---------------------|---------|------------------|---------------|----------------|-------------------------------------------------------------------------|
| Logistic Regression | 99.95%  | 1.00             | 1.00          | 1.00           | Performa sempurna hampir tanpa kesalahan. Hanya 1 salah klasifikasi.   |
| Random Forest       | 98.00%  | 0.98             | 0.98          | 0.98           | Performa sangat tinggi, namun masih terjadi misklasifikasi minor antar kelas. |

**🚂 Logistic Regression** berhasil memprediksi dengan sangat akurat jenis makronutrien dominan harian pengguna, dengan tingkat kesalahan yang sangat rendah dan distribusi prediksi yang stabil di semua kelas.

---

### **Analisis Frekuensi Makanan berdasarkan Dominant_Macro**
"""

# Menggabungkan kembali label Dominant_Macro ke data makanan mentah
df_with_label = df.merge(daily_macro[['Date', 'User_ID', 'Dominant_Macro']], on=['Date', 'User_ID'], how='left')

# Hitung frekuensi Food_Item per kelas dominan
top_foods = df_with_label.groupby(['Dominant_Macro', 'Food_Item']).size().reset_index(name='count')
top_foods = top_foods.sort_values(['Dominant_Macro', 'count'], ascending=[True, False])

# Ambil top 5 food item per kelas dominan
top5_per_class = top_foods.groupby('Dominant_Macro').head(5)

# Tampilkan
top5_per_class

"""📌 **Insights:**
- **Karbo-Dominan**: Didominasi oleh camilan ringan dan minuman seperti *Coffee*, *Popcorn*, dan *Chips*. Menariknya, *Pork Chop* muncul di kategori ini, kemungkinan besar karena dikonsumsi bersamaan dengan makanan tinggi karbo.
- **Lemak-Dominan**: Secara mengejutkan diisi oleh makanan yang umumnya dianggap sehat seperti *Orange*, *Spinach*, dan *Apple*. Ini menunjukkan bahwa porsi makanan lain yang tinggi lemak mungkin mendominasi meskipun makanan ini hadir.
- **Protein-Dominan**: Jumlah konsumsi makanan jauh lebih sedikit dibandingkan dua kategori lain, mengindikasikan jarangnya hari dengan dominansi protein. *Nuts*, *Butter*, dan *Milk* menjadi sumber protein yang menonjol, meskipun beberapa seperti *Chocolate* dan *Green Tea* cenderung tidak lazim dikaitkan langsung dengan protein—mungkin dikonsumsi bersama makanan tinggi protein lainnya.

### **Distribusi Kategori Makanan Berdasarkan Dominansi Makro**
"""

# Ukuran figure
plt.figure(figsize=(8, 5))

# Plot histogram dengan countplot
sns.countplot(data=df_with_label, x='Meal_Type', hue='Dominant_Macro')

# Visual enhancements
plt.title('Distribusi Meal Type Berdasarkan Dominansi Makro')
plt.xlabel('Tipe Makan')
plt.ylabel('Jumlah')
plt.xticks(rotation=0)
plt.tight_layout()

# Tampilkan
plt.show()

# Buat tabulasi silang antara Meal_Type dan Dominant_Macro
meal_macro_counts = df_with_label.groupby(['Meal_Type', 'Dominant_Macro']).size().unstack().fillna(0).astype(int)

# Tampilkan tabel numerik
meal_macro_counts

"""📌 **Insights:**

| Meal Type | Karbo-Dominan | Lemak-Dominan | Protein-Dominan | Total |
|-----------|----------------|----------------|------------------|--------|
| Breakfast | 1,087          | 1,315          | 157              | 2,559  |
| Lunch     | 1,048          | 1,276          | 163              | 2,487  |
| Dinner    | 1,010          | 1,326          | 167              | 2,503  |
| Snack     | 1,053          | 1,225          | 173              | 2,451  |

- **Makan Pagi (Breakfast)** adalah waktu dengan dominansi **lemak tertinggi** (1.315), lebih tinggi dari Karbohidrat (1.087), dengan Protein relatif rendah (157).
  - Hal ini sejalan dengan ditemukannya *Coffee*, *Chips*, dan *Popcorn* sebagai makanan populer dalam kategori Karbo-Dominan, serta *Butter* dan *Milk* di kategori Lemak-Dominan.
- **Lunch & Dinner** memiliki pola mirip, didominasi oleh lemak dan karbohidrat, meskipun secara nutrisi seharusnya menjadi waktu optimal untuk asupan protein tinggi—namun hal ini belum tercermin pada data.
- **Snack** menunjukkan dominansi lemak yang masih signifikan (1.225), **namun mencatat jumlah Protein-Dominan tertinggi (173)** dibanding waktu makan lain.
  - Ini dapat dikaitkan dengan konsumsi *Nuts*, *Milk*, dan *Chocolate* yang mendukung status Protein-Dominan, meskipun sebagian juga tinggi lemak.

#### 🥗 Catatan Penting: Makanan Sehat ≠ Dominasi Nutrisi Sehat

Menariknya, makanan seperti *Apple*, *Spinach*, dan *Orange* muncul di kategori **Lemak-Dominan**. Ini menunjukkan bahwa walaupun makanan tersebut sehat, mereka dikonsumsi dalam hari-hari yang secara total didominasi oleh makanan tinggi lemak—kemungkinan besar karena kombinasi asupan lainnya.

#### 🎯 Implikasi:

- **Intervensi edukatif perlu difokuskan pada kombinasi makanan per hari**, bukan hanya item per item. Pengguna bisa saja mengira pola makannya sehat karena mengonsumsi buah/sayur, padahal secara total masih dominan lemak.
- **Camilan berpotensi menjadi kontributor tersembunyi terhadap dominansi lemak**, dengan snack tinggi kalori seperti *Chips* dan *Chocolate* muncul sebagai item dominan.
- Meningkatkan **kehadiran makanan tinggi protein di waktu makan utama** dapat menjadi strategi awal untuk menyeimbangkan rasio makronutrien harian.

## **Kesimpulan**

### 🔍 Evaluasi Model & Pemilihan Terbaik:

| Model                | Akurasi | Macro Precision | Macro Recall | Macro F1-Score | Catatan                                                                 |
|---------------------|---------|------------------|---------------|----------------|-------------------------------------------------------------------------|
| Logistic Regression | 99.95%  | 1.00             | 1.00          | 1.00           | Performa sempurna hampir tanpa kesalahan. Hanya 1 salah klasifikasi.   |
| Random Forest       | 98.00%  | 0.98             | 0.98          | 0.98           | Performa sangat tinggi, namun masih terjadi misklasifikasi minor antar kelas. |

##### 🚂 Logistic Regression dipilih sebagai model terbaik karena:
- **Akurasi tertinggi** (99.9%) di antara semua model.
- **Stabil di semua kelas**, termasuk kelas minoritas seperti Protein-Dominan.
- **Mudah diinterpretasikan**, ideal untuk aplikasi nyata berbasis nutrisi.

---

#### 🍽️ Insight Pola Makan:

| Meal Type | Karbo-Dominan | Lemak-Dominan | Protein-Dominan | Total |
|-----------|----------------|----------------|------------------|--------|
| Breakfast | 1,087          | **1,315**      | 157              | 2,559  |
| Lunch     | 1,048          | 1,276          | 163              | 2,487  |
| Dinner    | 1,010          | 1,326          | 167              | 2,503  |
| Snack     | 1,053          | 1,225          | **173**          | 2,451  |

- **Breakfast** didominasi lemak (1,315), jauh lebih tinggi dari karbohidrat (1,087), mencerminkan konsumsi umum seperti **Milk**, **Butter**, dan **Coffee**.
- **Lunch dan Dinner** memiliki pola mirip—dominansi lemak tetap dominan, sedangkan **protein relatif rendah**, meski secara ideal waktu ini cocok untuk asupan protein optimal.
- **Snack** menarik karena mencatat jumlah **Protein-Dominan tertinggi (173)**, sering kali disumbang oleh konsumsi **Nuts**, **Milk**, dan **Chocolate**—meskipun sebagian juga tinggi lemak.

---

#### 🧪 Top 5 Makanan Dominan:

| Dominant Macro   | Top Makanan                    |
|------------------|--------------------------------|
| Karbo-Dominan    | Coffee, Popcorn, Chips, Water, Pork Chop |
| Lemak-Dominan    | Orange, Spinach, Quinoa, Apple, Milk     |
| Protein-Dominan  | Chocolate, Nuts, Butter, Green Tea, Milk |

📌 **Catatan Penting:**  
Sejumlah makanan sehat seperti **Apple**, **Spinach**, dan **Orange** justru sering muncul di hari-hari **Lemak-Dominan**. Ini menunjukkan bahwa:
> "Makanan sehat ≠ hari dengan pola makan sehat."

---

#### 🎯 Implikasi & Rekomendasi:

- Fokus edukasi sebaiknya bergeser dari **item tunggal** ke **komposisi total harian**. Konsumsi buah/sayur tidak otomatis menyeimbangkan dominansi makronutrien.
- **Camilan** berperan besar dalam dominansi lemak harian—kandungan kalori tersembunyi dalam snack seperti **Chips** dan **Chocolate** harus diwaspadai.
- Perlu peningkatan **kehadiran protein** pada **makan siang dan malam**, mengingat rendahnya jumlah hari Protein-Dominan di waktu-waktu makan utama.

---

#### 🧩 Final Verdict:
>- 🚂 **Logistic Regression** terbukti sebagai model terbaik untuk klasifikasi dominansi makronutrien harian.
>
>- Performanya sangat tinggi, stabil, dan cocok untuk deployment nyata dalam aplikasi nutrisi berbasis data.
"""